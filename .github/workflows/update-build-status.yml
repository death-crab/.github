name: Update build status
run-name: Update status for ${{ github.event.client_payload.repository }} on ${{ github.event.client_payload.branch }}

on:
  repository_dispatch:
    types:
      - update-status

jobs:
  update-build-status:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Ensure build.json exists
      run: |
        mkdir -p status
        if [ ! -f status/build.json ]; then
          echo "{}" > status/build.json
        fi

    - name: Update build.json
      id: update-json
      run: |
        # Remove the organisation name (everything before the first "/")
        REPO_NAME=$(echo "${{ github.event.client_payload.repository }}" | cut -d'/' -f2)
       
        jq --arg repo "$REPO_NAME" \
           --arg branch "${{ github.event.client_payload.branch }}" \
           --arg build "${{ github.event.client_payload.build }}" \
           --arg status "${{ github.event.client_payload.status }}" \
           '.[$repo][$build][$branch] = $status' \
           status/build.json > status/build.json.tmp && mv status/build.json.tmp status/build.json

    - name: Commit and push updated build.json
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add status/build.json
        git commit -m "Update build status for ${{ github.event.client_payload.repository }}/main [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish build status
      if: always()
      uses: death-crab/actions/update-status@main
      with:
        private_key: ${{ secrets.STATUS_UPDATE_APP_KEY }}
